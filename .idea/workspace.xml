<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d87e7d60-7499-47b5-9d28-e39067733d6d" name="Changes" comment="- reprendre les infos imdb&#10;- se baser sur les genres de films et les tickets vendus pour savoir si ça va etre un succès&#10;- Modifier les colonnnes textuels en index pour pouvoir les utiliser (avec OneHotEncoder, ColumnTransformer et Pipeline)&#10;- faire une methode de visualization display_predict_diff_errors() dans un file graph_utils.py à part dans un dossier src&#10;- l'importer dans notre notebook&#10;- enregistrer l'image graph produite&#10;- afficher le mse" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Jupyter Notebook" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Mushkhushu&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Mushkhushu/PythonConda.git&quot;,
    &quot;accountId&quot;: &quot;92334d6a-8496-4a81-8b92-ea2c07e1ea81&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2yJDc6rp6qqUkKvmpSsXGqOMeHQ" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/PythonIASpace/PythonConda/analyze_movie/notebook&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;settings.sync&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\PythonIASpace\PythonConda\analyze_movie\notebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\PythonIASpace\PythonConda\analyze_movie" />
      <recent name="D:\PythonIASpace\PythonConda\titanic\data\raw" />
      <recent name="D:\PythonIASpace\PythonConda\titanic\notebook" />
      <recent name="D:\PythonIASpace\PythonConda\titanic\data" />
      <recent name="D:\PythonIASpace\PythonConda\ecole_notes\notebook" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-PY-251.25410.159" />
        <option value="bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d87e7d60-7499-47b5-9d28-e39067733d6d" name="Changes" comment="" />
      <created>1749543858472</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749543858472</updated>
      <workItem from="1749547038019" duration="16005000" />
      <workItem from="1749625769986" duration="19300000" />
      <workItem from="1749651754340" duration="452000" />
      <workItem from="1749652214894" duration="325000" />
    </task>
    <task id="LOCAL-00001" summary="first commit">
      <option name="closed" value="true" />
      <created>1749546548865</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1749546548865</updated>
    </task>
    <task id="LOCAL-00002" summary="first jupyter notebook">
      <option name="closed" value="true" />
      <created>1749547160677</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1749547160677</updated>
    </task>
    <task id="LOCAL-00003" summary="import numpy to manipulate tables">
      <option name="closed" value="true" />
      <created>1749547869852</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1749547869852</updated>
    </task>
    <task id="LOCAL-00004" summary="add a 2D array with numpy">
      <option name="closed" value="true" />
      <created>1749548389302</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1749548389302</updated>
    </task>
    <task id="LOCAL-00005" summary="récupérer les données des colonnes et des lignes">
      <option name="closed" value="true" />
      <created>1749548745265</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1749548745265</updated>
    </task>
    <task id="LOCAL-00006" summary="récupérer la durée la plus longue d'un array 2D avec data mixte PENSESR AU .astype(int) sinon il ne saura pas faire">
      <option name="closed" value="true" />
      <created>1749550336365</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1749550336365</updated>
    </task>
    <task id="LOCAL-00007" summary="récupérer la durée la plus longue d'un array 2D avec data mixte PENSER AU .astype(int) sinon il ne saura pas faire, il faut des int64 que numpy utilise">
      <option name="closed" value="true" />
      <created>1749550723177</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1749550723177</updated>
    </task>
    <task id="LOCAL-00008" summary="lisibilité explicite">
      <option name="closed" value="true" />
      <created>1749550974240</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1749550974240</updated>
    </task>
    <task id="LOCAL-00009" summary="importer pandas et importer un.csv de films">
      <option name="closed" value="true" />
      <created>1749557259538</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1749557259538</updated>
    </task>
    <task id="LOCAL-00010" summary="commentaires sur pandas avec .info() et .describe()">
      <option name="closed" value="true" />
      <created>1749557476814</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1749557476815</updated>
    </task>
    <task id="LOCAL-00011" summary="plus explicite">
      <option name="closed" value="true" />
      <created>1749557590153</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1749557590153</updated>
    </task>
    <task id="LOCAL-00012" summary="ajouter des années de sortie des films sur le .csv et importer matplotlib pour visualiser les duration et year">
      <option name="closed" value="true" />
      <created>1749558374967</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1749558374967</updated>
    </task>
    <task id="LOCAL-00013" summary="explicite">
      <option name="closed" value="true" />
      <created>1749558859651</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1749558859651</updated>
    </task>
    <task id="LOCAL-00014" summary="màj relative path following raw data folder">
      <option name="closed" value="true" />
      <created>1749558994766</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1749558994766</updated>
    </task>
    <task id="LOCAL-00015" summary="1 seule visualisation par cellule">
      <option name="closed" value="true" />
      <created>1749559447648</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1749559447648</updated>
    </task>
    <task id="LOCAL-00016" summary="importer un .csv avec un séparateur en point-virgule et utilisation du param delimiter dans .read_csv()">
      <option name="closed" value="true" />
      <created>1749559635991</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1749559635991</updated>
    </task>
    <task id="LOCAL-00017" summary="importer seaborn, faire le meme graphique scatterplot avec moins de codes">
      <option name="closed" value="true" />
      <created>1749559959681</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1749559959681</updated>
    </task>
    <task id="LOCAL-00018" summary="amélioration">
      <option name="closed" value="true" />
      <created>1749560137159</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1749560137159</updated>
    </task>
    <task id="LOCAL-00019" summary="faire un pairplot">
      <option name="closed" value="true" />
      <created>1749560209812</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1749560209812</updated>
    </task>
    <task id="LOCAL-00020" summary="faire un barplot">
      <option name="closed" value="true" />
      <created>1749560372995</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1749560372995</updated>
    </task>
    <task id="LOCAL-00021" summary="importer un .csv de IMDB">
      <option name="closed" value="true" />
      <created>1749560577396</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1749560577397</updated>
    </task>
    <task id="LOCAL-00022" summary="faire une heatmap avec les datas imdb">
      <option name="closed" value="true" />
      <created>1749561022770</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1749561022770</updated>
    </task>
    <task id="LOCAL-00023" summary="faire une heatmap avec les datas imdb, uniquement avec les valeurs numériques, et il le fait tout seul">
      <option name="closed" value="true" />
      <created>1749561336341</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1749561336341</updated>
    </task>
    <task id="LOCAL-00024" summary="prendre un dataset issue de seaborn directement pour faire des tests">
      <option name="closed" value="true" />
      <created>1749561458507</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1749561458507</updated>
    </task>
    <task id="LOCAL-00025" summary="faire un histplot des penguins de seaborn">
      <option name="closed" value="true" />
      <created>1749561578638</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1749561578638</updated>
    </task>
    <task id="LOCAL-00026" summary="import titanic data .csv et new jupyter note to visualize a heatmap">
      <option name="closed" value="true" />
      <created>1749564401650</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1749564401650</updated>
    </task>
    <task id="LOCAL-00027" summary="import movie_genre_stats.csv et new jupyter note to visualize a heatmap">
      <option name="closed" value="true" />
      <created>1749564522158</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1749564522158</updated>
    </task>
    <task id="LOCAL-00028" summary="movie_genre_stats.csv and .head()">
      <option name="closed" value="true" />
      <created>1749564589869</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1749564589869</updated>
    </task>
    <task id="LOCAL-00029" summary="titanic.csv and .head() and histplot">
      <option name="closed" value="true" />
      <created>1749564789412</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1749564789412</updated>
    </task>
    <task id="LOCAL-00030" summary="movie_genre_stats.csv et compter combien de films sortis par genre de films (unique) ? TD&#10;avec loc de pandas pour regrouper des colums selon une condition&#10;afficher avec un sns.barplot aggrandi avec figsize">
      <option name="closed" value="true" />
      <created>1749566899870</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1749566899870</updated>
    </task>
    <task id="LOCAL-00031" summary="movie_genre_stats.csv et compter combien de places vendues par genre de films">
      <option name="closed" value="true" />
      <created>1749567043682</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1749567043682</updated>
    </task>
    <task id="LOCAL-00032" summary="jour 2">
      <option name="closed" value="true" />
      <created>1749625854269</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1749625854269</updated>
    </task>
    <task id="LOCAL-00033" summary="exercice ex-group-aggre.ipynb sur travail sur df.loc">
      <option name="closed" value="true" />
      <created>1749627173415</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1749627173415</updated>
    </task>
    <task id="LOCAL-00034" summary="exercice ex-group-aggre.ipynb sur travail sur df.loc à la main">
      <option name="closed" value="true" />
      <created>1749628440804</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1749628440804</updated>
    </task>
    <task id="LOCAL-00035" summary="exercice de faire le mse (mean square error) à la main">
      <option name="closed" value="true" />
      <created>1749629842095</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1749629842095</updated>
    </task>
    <task id="LOCAL-00036" summary="exercice de faire le mse (mean square error) à la main -- explicit">
      <option name="closed" value="true" />
      <created>1749629877492</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1749629877492</updated>
    </task>
    <task id="LOCAL-00037" summary="exercice de faire le mse (mean square error) à la main -- explicit2">
      <option name="closed" value="true" />
      <created>1749632504584</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1749632504584</updated>
    </task>
    <task id="LOCAL-00038" summary="predict-bac.ipynb : exercice d'entrainement d'un modèle linearRegression pour prédire des notes au bac selon les notes de l'année :&#10;— avec jeux de données&#10;— préparation des données avec train_test_split&#10;— entrainement du modèle avec model.predict() &#10;— vérification du mse avec mean_squared_error()&#10;— exporter le modèle en pickle (.pkl) en créant une file contenant le modèle en binaire&#10;— création d'un nouveau notebook use-custom-model.ipynb pour charger notre modèle custom model_predict_bac.pkl ainsi créé et l'exécuter&#10;+ lisibilité dans prediction-notes.ipynb&#10;Conclusion: linearRegression n'est pas du tout adapté à ce que l'on veut faire">
      <option name="closed" value="true" />
      <created>1749637398066</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1749637398066</updated>
    </task>
    <task id="LOCAL-00039" summary="prediction-notes-avec-forest.ipynb : exercice d'entrainement d'un modèle RandomForestRegression pour prédire des notes au bac selon les notes de l'année :&#10;— avec jeux de données&#10;— préparation des données avec train_test_split&#10;— entrainement du modèle avec model.predict() &#10;— vérification du mse avec mean_squared_error()&#10;— exporter le modèle en pickle (.pkl) en créant une file contenant le modèle en binaire&#10;— création d'un nouveau notebook use-custom-model.ipynb pour charger notre modèle custom model_predict_bac_random_forest.pkl ainsi créé et l'exécuter&#10;&#10;Conclusion: RandomForestRegression trouve les bonnes notes donc est beaucoup plus adapté mais le mse n'est pas cohérent car dataset trop pauvre, pas assez d'élèves et de notes">
      <option name="closed" value="true" />
      <created>1749643700922</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1749643700922</updated>
    </task>
    <task id="LOCAL-00040" summary="prediction-notes-avec-forest.ipynb : afficher un graphe d'écart entre les données réelles et les prédictions">
      <option name="closed" value="true" />
      <created>1749644667057</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1749644667057</updated>
    </task>
    <task id="LOCAL-00041" summary="predict-bac_4_ele_test.ipynb : les datas de plein d'élèves d'Isaac pour afficher un graphe d'écart entre les données réelles et les prédictions cohérent">
      <option name="closed" value="true" />
      <created>1749645023588</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1749645023588</updated>
    </task>
    <task id="LOCAL-00042" summary="rangement en sous dossiers selon les projets">
      <option name="closed" value="true" />
      <created>1749645217186</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1749645217186</updated>
    </task>
    <task id="LOCAL-00043" summary="- reprendre les infos imdb&#10;- se baser sur les genres de films et les tickets vendus pour savoir si ça va etre un succès&#10;- Modifier les colonnnes textuels en index pour pouvoir les utiliser (avec OneHotEncoder, ColumnTransformer et Pipeline)&#10;- faire une methode de visualization display_predict_diff_errors() dans un file graph_utils.py à part dans un dossier src&#10;- l'importer dans notre notebook&#10;- enregistrer l'image graph produite&#10;- afficher le mse">
      <option name="closed" value="true" />
      <created>1749652470649</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1749652470649</updated>
    </task>
    <option name="localTasksCounter" value="44" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="faire un pairplot" />
    <MESSAGE value="faire un barplot" />
    <MESSAGE value="importer un .csv de IMDB" />
    <MESSAGE value="faire une heatmap avec les datas imdb" />
    <MESSAGE value="faire une heatmap avec les datas imdb, uniquement avec les valeurs numériques, et il le fait tout seul" />
    <MESSAGE value="prendre un dataset issue de seaborn directement pour faire des tests" />
    <MESSAGE value="faire un histplot des penguins de seaborn" />
    <MESSAGE value="import titanic data .csv et new jupyter note to visualize a heatmap" />
    <MESSAGE value="import movie_genre_stats.csv et new jupyter note to visualize a heatmap" />
    <MESSAGE value="movie_genre_stats.csv and .head()" />
    <MESSAGE value="titanic.csv and .head() and histplot" />
    <MESSAGE value="movie_genre_stats.csv et compter combien de films sortis par genre de films (unique) ? TD&#10;avec loc de pandas pour regrouper des colums selon une condition&#10;afficher avec un sns.barplot aggrandi avec figsize" />
    <MESSAGE value="movie_genre_stats.csv et compter combien de places vendues par genre de films" />
    <MESSAGE value="jour 2" />
    <MESSAGE value="exercice ex-group-aggre.ipynb sur travail sur df.loc" />
    <MESSAGE value="exercice ex-group-aggre.ipynb sur travail sur df.loc à la main" />
    <MESSAGE value="exercice de faire le mse (mean square error) à la main" />
    <MESSAGE value="exercice de faire le mse (mean square error) à la main -- explicit" />
    <MESSAGE value="exercice de faire le mse (mean square error) à la main -- explicit2" />
    <MESSAGE value="predict-bac.ipynb : exercice d'entrainement d'un modèle linearRegression pour prédire des notes au bac selon les notes de l'année :&#10;— avec jeux de données&#10;— préparation des données avec train_test_split&#10;— entrainement du modèle avec model.predict() &#10;— vérification du mse avec mean_squared_error()&#10;— exporter le modèle en pickle (.pkl) en créant une file contenant le modèle en binaire&#10;— création d'un nouveau notebook use-custom-model.ipynb pour charger notre modèle custom model_predict_bac.pkl ainsi créé et l'exécuter&#10;+ lisibilité dans prediction-notes.ipynb&#10;Conclusion: linearRegression n'est pas du tout adapté à ce que l'on veut faire" />
    <MESSAGE value="prediction-notes-avec-forest.ipynb : exercice d'entrainement d'un modèle RandomForestRegression pour prédire des notes au bac selon les notes de l'année :&#10;— avec jeux de données&#10;— préparation des données avec train_test_split&#10;— entrainement du modèle avec model.predict() &#10;— vérification du mse avec mean_squared_error()&#10;— exporter le modèle en pickle (.pkl) en créant une file contenant le modèle en binaire&#10;— création d'un nouveau notebook use-custom-model.ipynb pour charger notre modèle custom model_predict_bac_random_forest.pkl ainsi créé et l'exécuter&#10;&#10;Conclusion: RandomForestRegression trouve les bonnes notes donc est beaucoup plus adapté mais le mse n'est pas cohérent car dataset trop pauvre, pas assez d'élèves et de notes" />
    <MESSAGE value="prediction-notes-avec-forest.ipynb : afficher un graphe d'écart entre les données réelles et les prédictions" />
    <MESSAGE value="predict-bac_4_ele_test.ipynb : les datas de plein d'élèves d'Isaac pour afficher un graphe d'écart entre les données réelles et les prédictions cohérent" />
    <MESSAGE value="rangement en sous dossiers selon les projets" />
    <MESSAGE value="- reprendre les infos imdb&#10;- se baser sur les genres de films et les tickets vendus pour savoir si ça va etre un succès&#10;- Modifier les colonnnes textuels en index pour pouvoir les utiliser (avec OneHotEncoder, ColumnTransformer et Pipeline)&#10;- faire une methode de visualization display_predict_diff_errors() dans un file graph_utils.py à part dans un dossier src&#10;- l'importer dans notre notebook&#10;- enregistrer l'image graph produite&#10;- afficher le mse" />
    <option name="LAST_COMMIT_MESSAGE" value="- reprendre les infos imdb&#10;- se baser sur les genres de films et les tickets vendus pour savoir si ça va etre un succès&#10;- Modifier les colonnnes textuels en index pour pouvoir les utiliser (avec OneHotEncoder, ColumnTransformer et Pipeline)&#10;- faire une methode de visualization display_predict_diff_errors() dans un file graph_utils.py à part dans un dossier src&#10;- l'importer dans notre notebook&#10;- enregistrer l'image graph produite&#10;- afficher le mse" />
  </component>
</project>