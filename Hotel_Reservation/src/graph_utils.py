import matplotlib.pyplot as plt
import numpy as np
# refacto, passer toutes les variables n√©cessaires en param√®tres, sauf la lib que l'on importe
def display_predict_diff_errors(y_test,predictions):
    plt.figure(figsize=(12, 6))
    plt.plot(range(20), y_test[:20], label='Valeur r√©elle', marker='o')
    plt.plot(range(20), predictions[:20], label='Pr√©diction', marker='x')
    plt.title("Erreurs")
    plt.xlabel("Index dans l'ensemble de test")
    plt.ylabel("annulations")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    # Sauvegarder la figure au format PNG
    plt.savefig("rfr_predict_error.png", dpi=300, bbox_inches='tight')
    plt.show()

def display_predict_diff_errors2(y_test, predictions, n=20, save_path=None):
    """
    Visualise les √©carts entre les valeurs r√©elles et les pr√©dictions.

    Param√®tres :
    - y_test : valeurs r√©elles (array-like ou Series)
    - predictions : valeurs pr√©dites (array-like)
    - n : nombre de premi√®res valeurs √† afficher (d√©faut : 20)
    - save_path : chemin pour sauvegarder l'image (ex: "plot.png") ou None pour ne pas sauvegarder
    """

    # Conversion en array pour indexation s√ªre
    y_test = np.array(y_test)
    predictions = np.array(predictions)

    # V√©rification taille
    if len(y_test) != len(predictions):
        raise ValueError("y_test et predictions doivent avoir la m√™me longueur.")

    # Limiter √† n premiers √©l√©ments
    y_test_subset = y_test[:n]
    predictions_subset = predictions[:n]

    # Cr√©ation du graphique
    plt.figure(figsize=(12, 6))
    plt.plot(range(n), y_test_subset, label='Valeur r√©elle', marker='o', color='green')
    plt.plot(range(n), predictions_subset, label='Pr√©diction', marker='x', color='orange')
    plt.title(f"Comparaison R√©el vs Pr√©diction (sur {n} √©chantillons)")
    plt.xlabel("Index dans l'ensemble de test")
    plt.ylabel("Annulation (0 ou 1)")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()

    if save_path:
        plt.savefig(save_path, dpi=300, bbox_inches='tight')
        print(f"üì∑ Graphique sauvegard√© dans : {save_path}")

    plt.show()